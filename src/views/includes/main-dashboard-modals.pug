.modal#createTicket
  .modal-content
    .modal-header
      span.close &times;
      h1 Create New Ticket
    .modal-body
      form.container#createForm(action="/ticket/new", method="post")
        .input-group.space-right
          label(for="from") From: *
          input#from(type="text", name="from", required)
          select#store(name="store")
            each store in storesList
              option(value=store.name)=store.name
        .input-group
          label(for="division") Department: *
          select#division(name="department", required)
            option(value="") Select department
            each department in departmentsList
              option(value=department.name)=department.name
        .input-group.space-right
          label(for="phone") Phone: *
          input#phone(type="text", name="phone", required)
        .input-group
          label(for="cellphone") Cellphone:
          input#cellphone(type="text", name="cellphone")
        .input-group.space-right
          label(for="assignedto") Assigned to: *
          input#assignedto(name="assignedto", type="text", readonly, value=user.email)
        .input-group
          label(for="cc") CC:
          select#cc(name="cc")
            option(value="") Select CC user
            each employee in usersList
              option(value=employee.email)=employee.name
        .input-group.space-right
          label(for="category") Category: *
          select#category(name="category", required)
            option(value="", default) Select category
            each category in categoriesList
              option(value=category.name)=category.name
        .input-group
          label(for="subcategory") Subcategory: *
          select#subcategory(name="subcategory", required)
            option(value="", default) Select category                
        label(for="problem") Problem: *
        input#problem(type="text", name="problem", required)
        label(for="description") Description: 
        textarea#description(name="description", cols="30", rows="5", dragable="false")
        .checkbox
          label(for="isclosed") Is the ticket closed?
          input#isclosed(type="checkbox", name="isclosed")
    .modal-footer
        button.right.success(type="submit", form="createForm") Send
          
script.
  var modal = document.getElementById('createTicket');
  var btn = document.getElementById('addTicket');
  var span = document.getElementsByClassName('close')[0];
  var hamburger = document.getElementById('hamburger');
  var sidebar = document.getElementById('sidebar');
  var main = document.getElementById('main');
  var categoryForm = document.getElementById('category');
  var subcategoryForm = document.getElementById('subcategory');
  var phoneForm = document.getElementById('phone');
  var storeForm = document.getElementById('store');    
  var categories = !{JSON.stringify(categoriesList)};
  var stores = !{JSON.stringify(storesList)};
  var idleLogout = function() {
    var t;
    window.onload = resetTimer;
    window.onmousemove = resetTimer;
    window.onmousedown = resetTimer; 
    window.onclick = resetTimer;    
    window.onscroll = resetTimer;    
    window.onkeypress = resetTimer;

    function logout() {
      window.location.reload();
    }

    function resetTimer() {
      clearTimeout(t);
      t = setTimeout(logout, 1500000); 
    }
  };

  idleLogout();

  categoryForm.onchange = function() {
    for (let category of categories) {
      if(category.name === this.value) {
        while (subcategoryForm.firstChild) {
          subcategoryForm.removeChild(subcategoryForm.firstChild);
        }
        for (let subcategory of category.subcategories) {
          let opt = document.createElement('OPTION');
          opt.value = subcategory;
          opt.text = subcategory;
          subcategoryForm.appendChild(opt);
        }
        break;
      }
    }
  };
  storeForm.onchange = function () {
    for (let store of stores) {
      if(store.name === this.value) {
        phoneForm.value = store.phone;
        break;
      }
    }
  };
  hamburger.onclick = function() {
    sidebar.classList.add('toggled');
    main.onclick = function () {
      sidebar.classList.remove('toggled');
      main.onclick = null;
    }
  };
  btn.onclick = function() {
    modal.style.display = 'block';
  };
  span.onclick = function() {
    modal.style.display = 'none';
  };
  window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = 'none';
    }
  };